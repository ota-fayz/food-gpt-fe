{
  "info": {
    "name": "Food GPT API",
    "description": "Complete API collection for Food GPT Backend - Full CRUD operations with JWT authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "apiUrl",
      "value": "{{baseUrl}}/api/v1",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "recipeId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/healthz",
          "host": ["{{baseUrl}}"],
          "path": ["healthz"]
        }
      },
      "response": []
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('User registered, token saved:', response.token);",
                  "    console.log('User ID saved:', response.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"username\": \"testuser\",\n  \"full_name\": \"Test User\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/auth/register",
              "host": ["{{apiUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('User logged in, token saved:', response.token);",
                  "    console.log('User ID saved:', response.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/auth/login",
              "host": ["{{apiUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/auth/forgot-password",
              "host": ["{{apiUrl}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset-token-123\",\n  \"new_password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/auth/reset-password",
              "host": ["{{apiUrl}}"],
              "path": ["auth", "reset-password"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiUrl}}/auth/verify-email?token=verification-token-123",
              "host": ["{{apiUrl}}"],
              "path": ["auth", "verify-email"],
              "query": [
                {
                  "key": "token",
                  "value": "verification-token-123"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/users/profile",
              "host": ["{{apiUrl}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"Updated Test User\",\n  \"avatar_url\": \"https://example.com/avatar.jpg\",\n  \"dietary_restrictions\": [\"vegetarian\"],\n  \"favorite_ingredients\": [\"tomato\", \"cheese\"]\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/users/profile",
              "host": ["{{apiUrl}}"],
              "path": ["users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"password123\",\n  \"new_password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/users/change-password",
              "host": ["{{apiUrl}}"],
              "path": ["users", "change-password"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Recipes",
      "item": [
        {
          "name": "Get All Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Get Recipes with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes?page=1&page_size=10",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Recipes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes?search=pasta",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"],
              "query": [
                {
                  "key": "search",
                  "value": "pasta"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Filter Recipes by User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes?user_id={{userId}}",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{userId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Recipe by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes/{{recipeId}}",
              "host": ["{{apiUrl}}"],
              "path": ["recipes", "{{recipeId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Spaghetti Carbonara",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('recipeId', response.id);",
                  "    console.log('Recipe ID saved:', response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Spaghetti Carbonara\",\n  \"description\": \"Classic Italian pasta dish with eggs, cheese, and pancetta\",\n  \"prep_time_minutes\": 10,\n  \"cook_time_minutes\": 15,\n  \"servings\": 4,\n  \"difficulty\": \"medium\",\n  \"instructions\": [\n    \"Boil pasta in salted water until al dente\",\n    \"Cook pancetta in a large pan until crispy\",\n    \"Whisk eggs with grated cheese in a bowl\",\n    \"Drain pasta and immediately mix with pancetta\",\n    \"Remove from heat and quickly stir in egg mixture\",\n    \"Season with black pepper and serve immediately\"\n  ],\n  \"cuisine\": \"Italian\",\n  \"meal_type\": \"dinner\",\n  \"tags\": [\"pasta\", \"quick\", \"comfort food\", \"italian\"],\n  \"calories\": 450,\n  \"protein\": 18.5,\n  \"carbs\": 55.2,\n  \"fat\": 16.8,\n  \"is_ai_generated\": false,\n  \"ingredients\": [\n    {\n      \"ingredient_id\": \"48c00d78-5b3e-48fa-8b13-4a6c0bf41332\",\n      \"amount\": 400,\n      \"unit\": \"g\",\n      \"preparation\": \"cooked al dente\",\n      \"is_optional\": false\n    },\n    {\n      \"ingredient_id\": \"9cf44731-ebb9-421f-9153-8f19786ae97a\",\n      \"amount\": 2,\n      \"unit\": \"tbsp\",\n      \"preparation\": \"for cooking\",\n      \"is_optional\": false\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Create Chicken Stir Fry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Quick Chicken Stir Fry\",\n  \"description\": \"Healthy and quick chicken stir fry with vegetables\",\n  \"prep_time_minutes\": 15,\n  \"cook_time_minutes\": 10,\n  \"servings\": 2,\n  \"difficulty\": \"easy\",\n  \"instructions\": [\n    \"Cut chicken breast into small pieces\",\n    \"Heat oil in a wok or large pan\",\n    \"Cook chicken until golden brown\",\n    \"Add vegetables and stir fry for 3-4 minutes\",\n    \"Add sauce and cook for 2 more minutes\",\n    \"Serve over rice\"\n  ],\n  \"cuisine\": \"Asian\",\n  \"meal_type\": \"lunch\",\n  \"tags\": [\"healthy\", \"quick\", \"chicken\", \"vegetables\"],\n  \"calories\": 320,\n  \"protein\": 28.0,\n  \"carbs\": 12.5,\n  \"fat\": 18.2,\n  \"is_ai_generated\": false,\n  \"ingredients\": [\n    {\n      \"ingredient_id\": \"ec92c813-c0e9-4e1a-9a8d-473e3a1445c1\",\n      \"amount\": 300,\n      \"unit\": \"g\",\n      \"preparation\": \"cut into small pieces\",\n      \"is_optional\": false\n    },\n    {\n      \"ingredient_id\": \"7466ae58-4de8-466a-a53b-32d6ca6e56f6\",\n      \"amount\": 1,\n      \"unit\": \"piece\",\n      \"preparation\": \"sliced\",\n      \"is_optional\": false\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Create AI-Generated Recipe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"AI-Generated Breakfast Pancakes\",\n  \"description\": \"Fluffy pancakes perfect for weekend breakfast\",\n  \"prep_time_minutes\": 5,\n  \"cook_time_minutes\": 15,\n  \"servings\": 3,\n  \"difficulty\": \"easy\",\n  \"instructions\": [\n    \"Mix dry ingredients in a bowl\",\n    \"Combine wet ingredients separately\",\n    \"Fold wet ingredients into dry ingredients\",\n    \"Heat pan over medium heat\",\n    \"Pour batter and cook until bubbles form\",\n    \"Flip and cook until golden brown\"\n  ],\n  \"cuisine\": \"American\",\n  \"meal_type\": \"breakfast\",\n  \"tags\": [\"breakfast\", \"sweet\", \"fluffy\", \"weekend\"],\n  \"calories\": 280,\n  \"is_ai_generated\": true,\n  \"generation_prompt\": \"Create a simple pancake recipe for beginners\",\n  \"ingredients\": [\n    {\n      \"ingredient_id\": \"ed2b75b6-ebd9-48d9-810a-b613c6ddbe42\",\n      \"amount\": 200,\n      \"unit\": \"ml\",\n      \"preparation\": \"room temperature\",\n      \"is_optional\": false\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Update Recipe",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Spaghetti Carbonara Deluxe\",\n  \"prep_time_minutes\": 12,\n  \"difficulty\": \"easy\",\n  \"tags\": [\"pasta\", \"quick\", \"comfort food\", \"italian\", \"updated\"]\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/recipes/{{recipeId}}",
              "host": ["{{apiUrl}}"],
              "path": ["recipes", "{{recipeId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Recipe",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes/{{recipeId}}",
              "host": ["{{apiUrl}}"],
              "path": ["recipes", "{{recipeId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Recipe Creation (Missing Title)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Recipe without title should fail\"\n}"
            },
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Unauthorized Access (No Token)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes",
              "host": ["{{apiUrl}}"],
              "path": ["recipes"]
            }
          },
          "response": []
        },
        {
          "name": "Get Non-existing Recipe",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/recipes/123e4567-e89b-12d3-a456-426614174999",
              "host": ["{{apiUrl}}"],
              "path": ["recipes", "123e4567-e89b-12d3-a456-426614174999"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
